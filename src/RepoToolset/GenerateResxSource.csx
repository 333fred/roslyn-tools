// Copyright (c) Microsoft. All Rights Reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

#r "System.Xml.Linq"
using System.Xml.Linq;

const int maxDocCommentLength = 256;

string resxFile = Args[0];
string resourceName = Args[1];
string sourceOutputPath = Args[2];

string namespaceName = Path.GetFileNameWithoutExtension(resourceName);
string className = Path.GetExtension(resourceName).TrimStart('.');

var strings = new StringBuilder();
foreach (var node in XDocument.Load(resxFile).Descendants("data"))
{
    string name = node.Attribute("name")?.Value ?? throw new InvalidDataException($"Missing resource name");
    string value = node.Elements("value").FirstOrDefault()?.Value.Trim() ?? throw new InvalidDataException($"Missing resource value: '{name}'");

    if (value.Length > maxDocCommentLength)
    {
        value = value.Substring(0, maxDocCommentLength) + " ...";
    }

    string escapedTrimmedValue = new XElement("summary", value).ToString();

    foreach (var line in escapedTrimmedValue.Split(new[] { "\r\n", "\r", "\n" }, StringSplitOptions.None))
    {
        strings.Append("        /// ");
        strings.AppendLine(line);
    }

    strings.AppendLine($"        internal static string {name} => ResourceManager.GetString(\"{name}\", Culture);");
}

File.WriteAllText(sourceOutputPath, 
$@"// <auto-generated>
using System;
using System.Globalization;
using System.Reflection;
using System.Resources;

namespace {namespaceName}
{{
    internal static class {className}
    {{
        internal static CultureInfo Culture {{ get; set; }}
        internal static ResourceManager ResourceManager {{ get; }} = new ResourceManager(""{resourceName}"", typeof({className}).GetTypeInfo().Assembly);

{strings}
    }}
}}
");
